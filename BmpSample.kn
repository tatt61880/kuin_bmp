{{{
	BmpSample.kn v1.01 (for Kuin 1.00):
		Last Modified: 2016/03/26 04:17:53.
		Created by Tatt(@tatt61880)
		https://twitter.com/tatt61880
		https://github.com/tatt61880
}}}

const PixelSize: float :: 5.0

func Init(cfg: Kuin@CCfg)
	do cfg.Title :: "BmpTest.exe"
end func

func Main()
	var InputFileName: []char
	if(Kuin@GetCmdLines().Len() > 1)
		do InputFileName :: Kuin@GetCmdLines()[1]
	else
		do InputFileName :: "image.bmp"
	end if
	do Dbg@Log("InputFileName: " ~ InputFileName)
	var img: Bmp@CImage
	try
		do img :: Bmp@Load(InputFileName)
	catch()
		do Dbg@Log("LoadError")
		while()
			do Kuin@Act()
		end while
	end try
	var image_r: Bmp@CImage :: ##img
	var image_g: Bmp@CImage :: ##img
	var image_b: Bmp@CImage :: ##img
	var w: int :: img.Width()
	var h: int :: img.Height()
	for y(0, h - 1)
		for x(0, w - 1)
			do image_r.SetPixel(x, y, ([img.GetPixel(x, y).r, 0 $ byte8, 0 $ byte8, 255 $ byte8]) $ Bmp@CRgba)
			do image_g.SetPixel(x, y, ([0 $ byte8, img.GetPixel(x, y).g, 0 $ byte8, 255 $ byte8]) $ Bmp@CRgba)
			do image_b.SetPixel(x, y, ([0 $ byte8, 0 $ byte8, img.GetPixel(x, y).b, 255 $ byte8]) $ Bmp@CRgba)
		end for
	end for
	do image_r.Save("image_r.bmp", Bmp@EFiletype#Bmp_24bit)
	do image_g.Save("image_g.bmp", Bmp@EFiletype#Bmp_24bit)
	do image_b.Save("image_b.bmp", Bmp@EFiletype#Bmp_24bit)
	var d: Bmp@CRgba

	while()
		do Kuin@Act()
		for y(0, h - 1)
			for x(0, w - 1)
				do d :: img.GetPixel(x, h - y - 1)
				do Draw@Rect(x $ float * @PixelSize, (y $ float + 1.0) * @PixelSize, @PixelSize, @PixelSize, d.r $ float / 255.0, d.g $ float / 255.0, d.b $ float / 255.0, d.a $ float / 255.0)
				do Draw@Rect((x + w) $ float * @PixelSize, (y + 1) $ float * @PixelSize, @PixelSize, @PixelSize, d.r $ float / 255.0, 0.0, 0.0, d.a $ float / 255.0)
				do Draw@Rect(x $ float * @PixelSize, (y + 1 + h) $ float * @PixelSize, @PixelSize, @PixelSize, 0.0, d.g $ float / 255.0, 0.0, d.a $ float / 255.0)
				do Draw@Rect((x + w) $ float * @PixelSize, (y + 1 + h) $ float * @PixelSize, @PixelSize, @PixelSize, 0.0, 0.0, d.b $ float / 255.0, d.a $ float / 255.0)
			end for
		end for

		{FPSチェック。点滅して見えたら、FPSが低下しています}
		if((Kuin@Cnt() / 10) % 3 <> 0)
			do Draw@Rect((Kuin@FPS() * 60.0), 0.0, @PixelSize, @PixelSize, 1.0, 1.0, 1.0, 1.0)
		end if
		do Draw@Rect(60.0, 0.0, @PixelSize, @PixelSize, 1.0, 0.0, 0.0, 1.0)
	end while
end func
